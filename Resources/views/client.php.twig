<?php

{% if class_namespace %}
namespace {{ class_namespace }};
{% endif %}

use Ddeboer\SoapClientBundle\SoapClient;

/**
 * {% if name %}{{ name }} {% endif %}SOAP client
 * 
 * This class was automatically generated by the Ddeboer SOAP client bundle.
 * 
 * @see https://github.com/ddeboer/DdeboerSoapClientBundle
 */
class {{ class_name }} extends SoapClient
{
    /**
     * @var AdapterInterface
     */
    protected $adapter;
{% for operation in operations %}{# Decide which are the parameters #}
{% if operation.inputMessage.parts.count == 1 and operation.inputMessage.parts.first.name == 'parameters' %}
{# Document/literal wrapped #}
{% set params = document.getElementByName(operation.inputMessage.parts.first.type).subElements %}    
{% set response = document.getElementByName(operation.outputMessage.parts.first.type).subElements.first %}
{% else %}    
{% set params = operation.inputMessage.parts %}
{% endif %}
    /** {% if operation.documentation %}
     * {{ operation.documentation }}
     *  
{% endif %}     
{% for param in params %}
     * @param {{ param.phpType }} ${{ param.name }}
{% endfor %}
     * @return {{ response.phpType }}
     */
    public function {{ operation.name }}({% spaceless %}
        {% for param in params %}{% if param.phpTypeHint %}{{ param.phpTypeHint }} {% endif %}${{ param.name }}{% if not loop.last %}, {% endif %}{% endfor %}{% endspaceless %})
    {
        return $this->adapter->call('{{ operation.name }}', array({% if params %}
        
{% for param in params %}
            '{{ param.name}}' => ${{ param.name }}{% if not loop.last %}, {% endif %}        
{% endfor %}
        {% endif %}));
    }       
{% endfor %}    
}